# This file contains all available configuration options
# with their default values.

# options for analysis running
run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 30m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 0

  # include test files or not, default is true
  tests: true

  # list of build tags, all linters use it. Default is empty list.
  build-tags: []

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # from this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  skip-dirs:
    - release
    - scripts
    - vendor
    - test
    - .*

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # which files to skip: they will be analyzed, but issues from them
  # won't be reported. Default value is empty list, but there is
  # no need to include all autogenerated files, we confidently recognize
  # autogenerated files. If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  skip-files:
    - ".*\\.my\\.go$"

  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #modules-download-mode: readonly|release|vendor

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true


# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

linters:
  fast: false
  enable-all: true
  disable:
#    - bodyclose
#    - contextcheck
    - cyclop
    - deadcode
#    - errname
#    - errorlint
    - exhaustive
    - exhaustivestruct
    - exhaustruct
#    - forbidigo
    - funlen
#    - gci
#    - gochecknoglobals
#    - gochecknoinits
#    - gocognit
    - gocritic
#    - gocyclo
#    - godot
#    - godox
#    - goerr113
#    - gofumpt
    - golint
#    - gomnd
    - ifshort
#    - interfacebloat
    - interfacer
    - ireturn
#    - lll
    - maligned
#    - nakedret
    - nestif
#    - nilerr
#    - nlreturn
#    - noctx
    - nolintlint
    - nonamedreturns
    - nosnakecase
#    - revive
#    - rowserrcheck
    - scopelint
#    - sqlclosecheck
    - structcheck
#    - stylecheck
#    - tagliatelle
#    - tparallel
    - varcheck
    - varnamelen
#    - wastedassign
#    - whitespace
    - wrapcheck
    - wsl
